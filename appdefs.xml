<!--
Definitions for CrashPlan docker container.

This file is used as data source to generate README.md and unRAID template files
from Jinja2 templates.
-->
<defs>
  <app>
    <id>4</id>
    <gui_type>x11</gui_type>
    <friendly_name>CrashPlan</friendly_name>
    <name>{{ defs.app.friendly_name|lower|replace(' ', '-') }}</name>
    <project>
      <description>
CrashPlan makes it easy to protect your digital life, so you can get back to
whatâ€™s important in real life.  Only CrashPlan offers totally free local and
offsite backup. A subscription to the cloud backup service gets you continuous
backup, mobile file access and lots more. For the ultimate in computer backup,
get all three, from the same easy application.
      </description>
      <url>https://www.crashplan.com</url>
    </project>
    <unraid>
      <support_url>https://forums.unraid.net/topic/57756-support-crashplan/</support_url>
      <category>Backup:</category>
      <extra_description>
**Warning**: Make sure to read the *Taking Over Existing Backup* section from
the documentation if you are installing this container to replace another
CrashPlan installation (from Windows, Linux, Mac or even another Docker
container).
      </extra_description>
    </unraid>
    <container>
      <rough_download_size>160MB</rough_download_size>
      <storage_permissions>ro</storage_permissions>
    </container>
    <!-- Extra stuff to be added to the documentation. -->
    <documentation>
      <important>
> **_IMPORTANT_**: *CrashPlan for Home*, the version implemented by this
> container, is [being decommissioned].  One of the choice users have is to
> migrate to *CrashPlan PRO* (aka *CrashPlan for Small Business*).
>
> To do so, the [jlesage/crashplan-pro] Docker container can be used.  Make sure
> to read the related [documentation] for a smooth transition.
      </important>
      <section>
        <title level="2">Networking</title>
        <content>
By default, the container runs in bridge mode networking.  This is the best way
to go, unless your CrashPlan container is the backup destination of other
devices on your local network (LAN).

In this network mode, a private IP address on an isolated subnet is assigned to
containers.  For example, devices on your LAN may have IP addresses in the
`192.168.1.x` subnet, while containers have IP addresses in the `172.17.x.x`
range.  Thus, CrashPlan detects and reports a local/internal IP address in the
`172.17.x.x` subnet, something that other devices on your LAN cannot reach.

**NOTE**: The problem described here doesn't affect the scenario where your
CrashPlan container is the backup destination of other devices located *outside*
your LAN (i.e. over the Internet).  In this case, CrashPlan uses your public IP
address, which is properly detected no matter the networking mode.

The first solution to this issue is to add a static route on your router to
allow other devices to reach your CrashPlan container.  The way to configure
routes is different for each router, but here is the route information you will
need:
```
Subnet IP address:  172.17.0.0
Subnet mask:        255.255.0.0
Subnet prefix size: /16
Gateway:            IP address of your Docker host
```

The second solution is to run the container in host mode networking.  This mode
effectively disables network isolation of a Docker container. The container
shares the networking namespace of the host, meaning that it shares the same IP
address and is directly exposed to your LAN.  Consequently, port mappings are
note used/needed.  Note that this mode increases chances to conflict with other
containers or services running on the host.  To enable the host mode networking,
run the container with the `--net=host` parameter.

For more information, see the [Docker container networking] documentation.
        </content>
      </section>
      <section>
        <title level="2">Taking Over Existing Backup</title>
        <content>
If this container is replacing a CrashPlan installation (from Linux, Windows,
MAC or another Docker container), your existing backup can be taken over to
avoid re-uploading all your data.

To proceed, make sure to carefully read the [official documentation].

Here is a summary of what needs to be done:
  1. Start CrashPlan Docker container.  Make sure the configuration directory
     if not mapped to a folder used by a different CrashPlan container.
  2. Sign in to your account.
  3. Perform an adoption.  There is a gray banner asking you to do so.
  4. Once done, you will probably see missing items in the file selection.  This
     is normal, since path to your files is different in the container.
  5. Update the file selection by re-adding your files.  **Do not unselect
     missing items yet**.
  6. Perform a backup.  Because of deduplication, files will not be uploaded
     again.
  7. Once the backup is terminated, you can remove missing items **if you
     don't care about file versions**.  Else, keep missing items.
  8. If you are the destination for other computers, you have to adjust the
     location of previous backup archives.  In the `Inbound` section, if some of
     your friends have the message `Backup disabled - backup location is not
     accessible`: click on the name, then update the location.  It should be
     under `/backupArchives/&lt;Computer ID&gt;`.
        </content>
      </section>
      <section>
        <title level="2">Troubleshooting</title>
        <content/>
      </section>
      <section>
        <title level="3">Crashes / Maximum Amount of Allocated Memory</title>
        <content>
If CrashPlan crashes unexpectedly with large backups, try to increase the
maximum amount of memory CrashPlan is allowed to use. This can be done by:

  1. Setting the `CRASHPLAN_SRV_MAX_MEM` environment variable.  See the
     [Environment Variables](#environment-variables) section for more details.
  2. Using the [solution provided by CrashPlan] from its support site.
        </content>
      </section>
      <section>
        <title level="3">Inotify's Watch Limit</title>
        <content>
If CrashPlan exceeds inotify's max watch limit, real-time file watching cannot
work properly and the inotify watch limit needs to be increased on the **host**,
not the container.

For more details, see the CrashPlan's [Linux real-time file watching errors]
article.
        </content>
      </section>
      <section>
        <title level="4">Synology</title>
        <content>
On Synology NAS, the instuctions provided by the article mentioned in the
previous section apply, except that the inotify's max watch limit must be set in
`/etc.defaults/sysctl.conf` (instead of `/etc/sysctl.conf`) to make the setting
permanent.

**NOTE**: After an upgrade of the DSM software, verify that the content of the
file has not been overwritten.
        </content>
      </section>
      <section>
        <title level="3">Connection Between Computers</title>
        <content>
If you have connection issues between your computers, make sure to read the
[Connection between computers] article from CrashPlan support site.

When changing the inbound backup port from CrashPlan settings, don't forget to
also add the proper port mapping when running the container.  For example, if
the listening port is changed to `12345`, the option `-p 12345:12345` needs to
be added to the `docker run` command.
        </content>
      </section>
      <section>
        <title level="3">Command-Line Interface Disappears After Running Command</title>
        <content>
After entering a command in the command-line interface, the window immediately
disappear.  This is a known issue, but it should be noted that the requested
command is still executed as requested.

If the result and/or output of the command is needed, consult the log file
located at `log/service.log.0` in the config directory of container.  Here is
an example of log messages produced when running the `version` command:

```
[03.05.18 06:03:17.179 INFO  MQ-UI-1      backup42.service.ui.UIController] UserActionRequest: CommandMessage[version]
[03.05.18 06:03:17.179 INFO  MQ-UI-1      kup42.common.command.CliExecutor] RUN COMMAND: version  >  CommandResult@1111973668[ version, success=true, result=4.8.4 - 1436674800484 (2015-07-12T04:20:00:484+0000) - Build: 15 ]
```

The list of [available commands] can be consulted online.
        </content>
      </section>
      <section>
        <title level="3">Forcing Sign-In When Access To CrashPlan Requires Password</title>
        <content>
CrashPlan can be configured to require a password to access the application.
Enabling this option ensures no one else can make changes to settings or
restore files without the account password.

Sign-in is needed when the application is started.  Since the application is
always running in this container, a manual step is required to replace the
action of closing the application:
  1. Double click on the CrashPlan logo to open the command-line interface.
  2. Type `exit` and then press the Enter key.

After a few seconds, the CrashPlan application closes and then automatically
restarts.  At this point, password of the account is required to continue.
        </content>
      </section>
      <section>
        <title level="3">Upgrade Failed Error Message</title>
        <content>
Because the CrashPlan's self-upgrade feature is disabled in this container, an
error message about failed upgrade can be seen when a new CrashPlan version is
released.

To fix this, [updating the container's image](#docker-image-update) to the
latest version will also bring the latest version of CrashPlan.
        </content>
      </section>
      <link>
        <name>being decommissioned</name>
        <url>https://www.crashplan.com/en-us/consumer/nextsteps/</url>
      </link>
      <link>
        <name>jlesage/crashplan-pro</name>
        <url>https://hub.docker.com/r/jlesage/crashplan-pro/</url>
      </link>
      <link>
        <name>documentation</name>
        <url>https://github.com/jlesage/docker-crashplan-pro/blob/master/README.md#migrating-from-crashplan-for-home</url>
      </link>
      <link>
        <name>Docker container networking</name>
        <url>https://docs.docker.com/engine/userguide/networking/</url>
      </link>
      <link>
        <name>official documentation</name>
        <url>https://support.code42.com/CrashPlan/4/Configuring/Replacing_Your_Device</url>
      </link>
      <link>
        <name>solution provided by CrashPlan</name>
        <url>https://support.code42.com/CrashPlan/4/Troubleshooting/Adjusting_CrashPlan_Settings_For_Memory_Usage_With_Large_Backups</url>
      </link>
      <link>
        <name>Connections between computers</name>
        <url>https://support.code42.com/CrashPlan/4/Troubleshooting/Connections_between_computers</url>
      </link>
      <link>
        <name>Linux real-time file watching errors</name>
        <url>https://support.code42.com/CrashPlan/4/Troubleshooting/Linux_real-time_file_watching_errors</url>
      </link>
      <link>
        <name>available commands</name>
        <url>https://support.code42.com/CrashPlan/4/Troubleshooting/Code42_commands</url>
      </link>
    </documentation>
    <!-- Changelog of the application. -->
    <history>
      <release>
        <version>1.7.1</version>
        <date>2018-09-24</date>
        <change>Fixed issue where CrashPlan UI would not start.</change>
      </release>
      <release>
        <version>1.7.0</version>
        <date>2018-09-19</date>
        <change>Now using baseimage v3.5.1, which brings the following changes (since last used version):</change>
        <change level="2">Image based on Alpine Linux 3.8.</change>
        <change level="2">Upgraded s6-overlay to version 1.21.4.0.</change>
        <change level="2">Wait for a limited time when terminating a service.</change>
        <change level="2">Set and create the XDG_RUNTIME_DIR directory.</change>
        <change level="2">Updated installed packages to get latest security fixes.</change>
      </release>
      <release>
        <version>1.6.8</version>
        <date>2018-06-14</date>
        <change>To make sure the CrashPlan Engine will start, validate the value of CRASHPLAN_SRV_MAX_MEM variable during startup.</change>
      </release>
      <release>
        <version>1.6.7</version>
        <date>2018-06-11</date>
        <change>Fixed more instances where parsing of CrashPlan memory usage would fail.</change>
      </release>
      <release>
        <version>1.6.6</version>
        <date>2018-06-06</date>
        <change>Fixed an issue where parsing of CrashPlan memory usage would fail.</change>
      </release>
      <release>
        <version>1.6.5</version>
        <date>2018-04-23</date>
        <change>Fixed issue where supplementary groups were not applied to the CrashPlan engine.</change>
      </release>
      <release>
        <version>1.6.4</version>
        <date>2018-03-05</date>
        <change>Use the correct variable to keep the application running.</change>
      </release>
      <release>
        <version>1.6.3</version>
        <date>2018-03-02</date>
        <change>Now using baseimage v3.3.4, which brings the following changes (since last used version):</change>
        <change level="2">Make sure the log monitor is started after the X server.</change>
        <change level="2">Fixed an issue where the log monitor `yad` target would use XDG folders of the application.</change>
        <change level="2">Fixed issue where log monitor states were not cleared during container startup.</change>
      </release>
      <release>
        <version>1.6.2</version>
        <date>2018-02-03</date>
        <change>Now using baseimage v3.3.2, which brings the following changes:</change>
        <change level="2">Restored timezone support in Alpine Linux images with glibc.</change>
        <change level="2">Fixed issue in `add-pkg` helper where a package could be incorrectly detected as installed.</change>
      </release>
      <release>
        <version>1.6.1</version>
        <date>2018-01-30</date>
        <change>Now using baseimage v3.3.1, which brings the following changes:</change>
        <change level="2">Adjusted the way some ressources are accessed to better support reverse proxy to the container.</change>
      </release>
      <release>
        <version>1.6.0</version>
        <date>2018-01-22</date>
        <change>Now using baseimage v3.3.0, which brings the following changes (since last used version):</change>
        <change level="2">For Alpine Linux images with glibc, automatically update dynamic linker's cache after new libraries are installed.</change>
        <change level="2">Fixed the LANG environment variable not being set properly.</change>
        <change level="2">Added the ability to automatically install a CJK (Chinese/Japanese/Korean) font.</change>
      </release>
      <release>
        <version>1.5.7</version>
        <date>2018-01-12</date>
        <change>Upgraded CrashPlan to version 4.8.4.</change>
      </release>
      <release>
        <version>1.5.6</version>
        <date>2018-01-11</date>
        <change>Fixed issue where libraries were not found.</change>
      </release>
      <release>
        <version>1.5.5</version>
        <date>2018-01-11</date>
        <change>Now using baseimage v3.2.2, which brings the following changes (since last used version):</change>
        <change level="2">Upgraded S6 overlay to version 1.21.2.2.</change>
        <change level="2">Upgraded glibc to version 2.26 (Alpine Linux glibc images).</change>
        <change level="2">Adjusted the way ownership of /config is taken to better support cases where the folder is mapped to a network share.</change>
        <change>Small adjustment to the way ownership of files are taken.</change>
      </release>
      <release>
        <version>1.5.4</version>
        <date>2017-12-14</date>
        <change>Fixed an issue where the CrashPlan UI would not connect to the engine using the loopback IP.</change>
        <change>Fixed an issue where automatic update could be partially done when running the container as root.</change>
      </release>
      <release>
        <version>1.5.3</version>
        <date>2017-12-12</date>
        <change>Now using baseimage v3.1.4, which brings the following changes:</change>
        <change level="2">Set 2 worker processes for nginx.</change>
      </release>
      <release>
        <version>1.5.2</version>
        <date>2017-11-20</date>
        <change>Now using baseimage v3.1.3, which brings the following changes:</change>
        <change level="2">Upgraded S6 overlay to version 1.21.2.1.</change>
      </release>
      <release>
        <version>1.5.1</version>
        <date>2017-11-07</date>
        <change>Now using baseimage v3.1.2, which brings the following changes (from last used version):</change>
        <change level="2">Fixed an issue where a self-disabled service could be restarted.</change>
        <change level="2">Upgraded S6 overlay to version 1.21.2.0.</change>
        <change level="2">Use a more efficient way to monitor status files.</change>
        <change>Wait for the CrashPlan engine to be ready before starting the UI.</change>
      </release>
      <release>
        <version>1.5.0</version>
        <date>2017-10-30</date>
        <change>Now using baseimage v3.1.0, which brings the following changes:</change>
        <change level="2">Upgraded S6 overlay to version 1.21.1.1.</change>
        <change level="2">Enhanced integration of service dependencies functionality.</change>
        <change level="2">Added a simple log monitor.</change>
        <change level="2">Fixed race condition where container's exit code would not be the expected one.</change>
        <change level="2">Fixed issue where application's GUI fails to displayed when accessing it through the web interface via standard ports 80/443.</change>
        <change>Now using the log monitor from the baseimage.</change>
      </release>
      <release>
        <version>1.4.2</version>
        <date>2017-10-09</date>
        <change>Now using baseimage v3.0.2, which brings the following changes:</change>
        <change level="2">Fixed issue where nginx config change was not applied correctly on systems without IPV6 support and secure connection disabled.</change>
      </release>
      <release>
        <version>1.4.1</version>
        <date>2017-10-08</date>
        <change>Now using baseimage v3.0.1, which brings the following changes:</change>
        <change level="2">Fixed nginx config for systems without IPV6 support.</change>
      </release>
      <release>
        <version>1.4.0</version>
        <date>2017-10-08</date>
        <change>Now using baseimage v3.0.0, which brings the following changes:</change>
        <change level="2">Better support for service dependencies.</change>
        <change level="2">Added support for secure access to the application's GUI.</change>
      </release>
      <release>
        <version>1.3.6</version>
        <date>2017-09-08</date>
        <change>Now using baseimage v2.0.8, which brings the following changes (from last used version):</change>
        <change level="2">Fixed timezone support on alpine-glibc images.</change>
        <change level="2">Fixed duplicated entries in /etc/passwd and /etc/group that were created after a restart of the container.</change>
      </release>
      <release>
        <version>1.3.5</version>
        <date>2017-08-14</date>
        <change>Now using baseimage v2.0.6, which brings the following changes:</change>
        <change level="2">Upgraded S6 overlay to version 1.20.0.0.</change>
      </release>
      <release>
        <version>1.3.4</version>
        <date>2017-07-31</date>
        <change>Now using baseimage v2.0.5, which brings the following changes (from last used version):</change>
        <change level="2">Clear the environment of the container during startup.</change>
        <change level="2">Clear the /tmp folder during startup.</change>
        <change level="2">Cleanly terminate the X server when container is restarted/stopped.</change>
        <change level="2">Improved robustness of X server starting process.</change>
        <change level="2">Removed unneeded files from the image.</change>
      </release>
      <release>
        <version>1.3.3</version>
        <date>2017-07-27</date>
        <change>Now using baseimage v2.0.3, which brings the following changes:</change>
        <change level="2">Improved robustness of the X server starting process.</change>
      </release>
      <release>
        <version>1.3.2</version>
        <date>2017-07-23</date>
        <change>Now using baseimage v2.0.2, which brings the following changes:</change>
        <change level="2">Proper VNC port is exposed.</change>
      </release>
      <release>
        <version>1.3.1</version>
        <date>2017-07-18</date>
        <change>Now using baseimage v2.0.1, which brings the following changes:</change>
        <change level="2">Internal enhancements.</change>
        <change level="2">Clean temporary files left by npm.</change>
        <change>Fixed usage of unRAID notification system.</change>
      </release>
      <release>
        <version>1.3.0</version>
        <date>2017-07-17</date>
        <change>Now using baseimage v2.0.0, which brings the following changes:</change>
        <change level="2">Various internal enhancements.</change>
        <change level="2">Fixed the way a service waits for another one.</change>
      </release>
      <release>
        <version>1.2.0</version>
        <date>2017-07-05</date>
        <change>Report common CrashPlan issues/problems.  When one is detected:</change>
        <change level="2">A message is sent to the main container's log.</change>
        <change level="2">A notification is sent via the unRAID's notification system (if supported).</change>
        <change>Now using baseimage v1.5.0, which brings the following changes:</change>
        <change level="2">Added the UMASK environment variable to control how file permissions are set for newly created files.</change>
        <change level="2">Added the X11VNC_EXTRA_OPTS environment variable used to pass additional arguments to the x11vnc server.</change>
        <change level="2">By default, activate auto-scaling of application's window.</change>
        <change level="2">Applied latest Alpine Linux security updates.</change>
      </release>
      <release>
        <version>1.1.1</version>
        <date>2017-06-22</date>
        <change>Now using baseimage v1.4.3, which brings the following changes:</change>
        <change level="2">Updated Alpine Linux to version 3.6.2.</change>
      </release>
      <release>
        <version>1.1.0</version>
        <date>2017-06-21</date>
        <change>Now using baseimage v1.4.2, which brings the following changes (from last used version):</change>
        <change level="2">Switched to Alpine Linux 3.6.</change>
        <change level="2">Associate the application's icon to a unique version to avoid browser cache issues.</change>
        <change level="2">Fixed prefix of some service related messages.</change>
        <change level="2">Added support for supplying supplementary groups of the application.</change>
        <change level="2">Improved process startup and shutdown.</change>
        <change level="2">When container is stopped or restarted, processes are now terminated gracefully and in proper order. This allow the GUI application to execute its termination routine.</change>
        <change level="2">No more error messages when container is stopped or restarted.</change>
      </release>
      <release>
        <version>1.0.2</version>
        <date>2017-06-19</date>
        <change>Upgraded CrashPlan to version 4.8.3.</change>
      </release>
      <release>
        <version>1.0.1</version>
        <date>2017-05-30</date>
        <change>Now using baseimage v1.3.2, which brings the following changes:</change>
        <change level="2">Fixed password modal window not showing up when required.</change>
        <change>Maximum amount of memory used by the CrashPlan Engine can now be set via the CRASHPLAN_SRV_MAX_MEM environment variable.</change>
      </release>
      <release>
        <version>1.0.0</version>
        <date>2017-05-29</date>
        <change>Initial release.</change>
      </release>
    </history>
  </app>
  <container>
    <!-- Environment variables -->
    <environment_variables>
      <environment_variable>
        <name>CRASHPLAN_SRV_MAX_MEM</name>
        <description>Maximum amount of memory the CrashPlan Engine is allowed to use. One of the following memory unit (case insensitive) should be added as a suffix to the size: `G`, `M` or `K`.  By default, when this variable is not set, a maximum of 1024MB (`1024M`) of memory is allowed.  **NOTE**: Setting this variable as the same effect as running the `java mx VALUE, restart` command from the CrashPlan command line.</description>
        <unraid_template>
          <title>Maximum Memory</title>
          <description>Maximum amount of memory the CrashPlan Engine is allowed to use.  One of the following memory unit (case insensitive) should be added as a suffix to the size: [b][i]G[/i][/b], [b][i]M[/i][/b] or [b][i]K[/i][/b]. By default, when this variable is not set, a maximum of 1024MB ([b][i]1024M[/i][/b]) of memory is allowed.</description>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </environment_variable>
    </environment_variables>
    <!-- Volumes -->
    <volumes>
      <volume>
        <container_path>/backupArchives</container_path>
        <host_path_example/>
        <description>This is where inbound backups are stored.</description>
        <permissions>rw</permissions>
        <unraid_template>
          <title>Inbound Backup Directory</title>
          <description>This is where inboud backup archives are stored.[br]Container path: /backupArchives[br][b]NOTE:[/b] This volume mapping is not needed if computer-to-computer backup feature is not used.</description>
          <default>/mnt/user/crashplanBackupArchives</default>
          <display>always</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </volume>
      <volume>
        <container_path>/var/local/emhttp</container_path>
        <host_path_example/>
        <description/>
        <permissions>ro</permissions>
        <unraid_template>
          <title>unRAID States</title>
          <description>This is where unRAID state files are located.  This is used by the container to generate unRAID notifications about common CrashPlan issues.[br]Container path: /var/local/emhttp</description>
          <default>/var/local/emhttp</default>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </volume>
    </volumes>
    <!-- Network ports -->
    <ports>
      <port>
        <number>4242</number>
        <protocol>tcp</protocol>
        <description>Port used by CrashPlan for computer-to-computer backups.  No need to expose this port if this feature is not used.  **NOTE**: Because this port is reported by CrashPlan to other devices signed to your account, the port mapped on the host side *must* be the same (i.e. 4242).</description>
        <mandatory>false</mandatory>
        <unraid_template>
          <title>P2P Backup Port</title>
          <description>Port used for computer-to-computer backup.[br][b]NOTE:[/b] To receive backups from remote computers over the internet, make sure to properly configure port-forwarding on your router.[br][b]NOTE:[/b] This port mapping is not needed if computer-to-computer backup feature is not used.</description>
          <default>4242</default>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </port>
    </ports>
    <!-- Devices -->
    <devices/>
    <!-- Extra parameters -->
    <extra_params/>
  </container>
</defs>
